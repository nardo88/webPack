/*
Loader - это возможность добавления к Webpack функционала позволяющая работать с другими типами файлов. (Webpack по дефолту понимает только JS)

Что бы установить css-loader и style-loader в консоле пишем команду: npm i -D css-loader style-loader

*/

// подключаем модуль path
const path = require('path');

// файл конфигурации webpack должен экспортировать объект
module.export = {
    // контекст т.е. мы указываем где находятся исходные файлы, т.е. в папке src
    context: path.resolve(__dirname, 'src'),
    // mode - это режим сборки: development - режим разработки (файл будет не минифицированный), production - режим конечной сдачи (файл будет минифицированный)
    mode: 'development',
    // точка входа, здесь указываем главный JS файл в который будут импортироваться модули
    entry: './scripts/index.js',
    // результат сборки - объект
    output: {
        // имя скомпилированного файла
        filename: 'bundle.js',
        // указываем путь куда будет сохранен этот файл. Для указания корректного пути нам понадобится встроенный модуль в Node.js path
        path: path.resolve(__dirname, 'dist')

    },
    // В module мы подключаем loader
    module: {
        // правила которые указываются как объекты
        rules: [
            {
                // test - это регулярка которая определяет тип файла
                test: /\.css$/,
                // если файл будет соответствовать регулярке то webpack должен использовать определенный loade указанный ниже
                use: ['style-loader', 'css-loader']
            },
        ],


    },


}